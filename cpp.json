{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"cpp-contest":{
		"prefix": "cppc",
		"body": [
			"//$CURRENT_HOUR:$CURRENT_MINUTE • $CURRENT_DATE $CURRENT_MONTH_NAME_SHORT $CURRENT_YEAR",
			"//$0",
			"#include <iostream>",
			"#include <vector>",
			"#include <string>",
			"#include <algorithm>",
			"#include <cmath>",
			"#include <utility>",
			"#include <set>",
			"#include <unordered_map>",
			"",
			"#define pb push_back",
			"#define mp make_pair",
			"#define ll long long",
			"#define nl \"\\n\"",
			"#define sz(a) a.size()",
			"#define all(a) a.begin(),a.end()",
			"#define mod 1000000007",
			"",
			"using namespace std;",
			"",
			"int main(){",
			"\tios_base::sync_with_stdio(false);cin.tie(NULL);",
			"\tint tt;",
			"\tcin >> tt;",
			"\twhile(tt--){",
			"\t\t",
			"\t}",
			"\treturn 0;",
			"}"
		]
	},

	"cpp-basic":{
		"prefix": "cppb",
		"body": [
			"//$CURRENT_HOUR:$CURRENT_MINUTE • $CURRENT_DATE $CURRENT_MONTH_NAME_SHORT $CURRENT_YEAR",
			"//$0",
			"#include <iostream>",
			"#include <vector>",
			"#include <string>",
			"#include <algorithm>",
			"#include <cmath>",
			"#include <utility>",
			"#include <set>",
			"#include <unordered_map>",
			"",
			"#define pb push_back",
			"#define mp make_pair",
			"#define ll long long",
			"#define nl \"\\n\"",
			"#define sz(a) a.size()",
			"#define all(a) a.begin(),a.end()",
			"#define mod 1000000007",
			"",
			"using namespace std;",
			"",
			"int main(){",
			"\tios_base::sync_with_stdio(false);cin.tie(NULL);",
			"\t",
			"",
			"\treturn 0;",
			"}"
		]
	}
}
